(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

var getTouchMapTransition = require("./vj-controller/get-touch-map-transition");
var initPaintCanvas = require("./vj-controller/init-paint-canvas");
var initControllerPad = require("./vj-controller/init-controller-pad");
var init = require("./vj-controller/init");
window.onload = function () {
	var canvas = document.getElementById("myCanvas");
	var w = 316;
	var h = 316;
	//getTouchMapTransition();
	init();
	initPaintCanvas(w, h, canvas);
	initControllerPad(w, h, canvas);
};

},{"./vj-controller/get-touch-map-transition":2,"./vj-controller/init":5,"./vj-controller/init-controller-pad":3,"./vj-controller/init-paint-canvas":4}],2:[function(require,module,exports){
"use strict";

//キャンバス上のマウス座標をとってくる
module.exports = function (_e, _canvas) {
	var mouseX = _e.touches[0].clientX - $(_canvas).position().left + scrollX();
	var mouseY = _e.touches[0].clientY - $(_canvas).position().top + scrollY();
	return { x: mouseX, y: mouseY };
};
function scrollX() {
	return document.documentElement.scrollLeft || document.body.scrollLeft;
}
function scrollY() {
	return document.documentElement.scrollTop || document.body.scrollTop;
}

},{}],3:[function(require,module,exports){
"use strict";

var getTouchMapTransition = require("./get-touch-map-transition");
module.exports = function (_w, _h, _canvas) {
	var socket = io();
	//var c=_canvas.getContext("2d");
	//console.log(c);
	var submitCanvas = document.getElementById("submitCanvas");
	var subc = submitCanvas.getContext("2d");

	//送信する側のキャンバス
	submitCanvas.width = _w;
	submitCanvas.height = _h;
	//画像をサーバーに送信する処理
	var subPos;
	var normalPosX, normalPosY;
	var image;
	var sendingTimer;
	/*-------------画像を送信する--------------*/
	submitCanvas.addEventListener("touchstart", function (e) {
		subPos = getTouchMapTransition(e, submitCanvas);
		normalPosX = (subPos.x * 2 - _w) / _w;
		normalPosY = -((subPos.y * 2 - _h) / _h);
		image = createbase64(_canvas);
		sendingTimer = setInterval(sentdata, 100);
	}, false);

	submitCanvas.addEventListener("touchmove", function (e) {
		subPos = getTouchMapTransition(e, submitCanvas);
		normalPosX = (subPos.x * 2 - _w) / _w;
		normalPosY = -((subPos.y * 2 - _h) / _h);
		image = createbase64(_canvas);
	}, false);
	submitCanvas.addEventListener("touchend", function () {
		clearInterval(sendingTimer);
	}, false);

	function sentdata() {
		socket.emit("pushImageFromClient", {
			imgdata: image,
			x: normalPosX,
			y: normalPosY
		});
	}
	function createbase64(_canvas) {
		var data = _canvas.toDataURL("image/png");
		var imageContents = document.getElementById("imageContents");
		imageContents.innerHTML = "<img src='" + data + "'>";
		return data;
	}
};

},{"./get-touch-map-transition":2}],4:[function(require,module,exports){
"use strict";

//絵を描く部分
var getTouchMapTransition = require("./get-touch-map-transition");
module.exports = function (_w, _h, _canvas) {
	var c = _canvas.getContext("2d");
	var drawing = false;
	var oldPos;

	_canvas.width = _w;
	_canvas.height = _h;

	c.strokeStyle = "black";
	c.lineWidth = 5;
	c.lineJoin = "round";
	c.lineCap = "round";

	//タップ開始時に、絵を描く準備をする
	_canvas.addEventListener("touchstart", function (e) {
		drawing = true;
		oldPos = getTouchMapTransition(e, _canvas);
	}, false);

	//タップ終了時に、絵を描く後処理を行う
	_canvas.addEventListener("touched", function () {
		drawing = false;
	}, false);

	//gestureイベント（2本指以上触ると発生する）
	//終了時にも絵を描く後処理を行う
	_canvas.addEventListener("gestureend", function () {
		drawing = false;
	}, false);

	//実際に絵を書く処理
	//前回保存した位置から現在の位置に線を引く
	_canvas.addEventListener("touchmove", function (e) {
		var pos = getTouchMapTransition(e, _canvas);
		if (drawing) {
			c.beginPath();
			c.moveTo(oldPos.x, oldPos.y);
			c.lineTo(pos.x, pos.y);
			c.stroke();
			c.closePath();
			oldPos = pos;
		}
	}, false);
	//色と線の太さを設定する
	setEventButtonColor("black", c);
	setEventButtonColor("blue", c);
	setEventButtonColor("red", c);
	setEventButtonColor("green", c);

	setEventLineWidth("small", c);
	setEventLineWidth("middle", c);
	setEventLineWidth("large", c);

	//削除ボタン
	document.getElementById("delete_button").addEventListener("click", function () {
		c.clearRect(0, 0, $(_canvas).width(), $(_canvas).height());
	}, false);

	//触ってはいけないボタン
	document.getElementById("dontTouch_button").addEventListener("click", function () {
		console.log("dontTouch_button");
		var img = new Image();
		img.src = "../../img/joe.jpg";
		img.onload = function () {
			c.drawImage(img, 0, 0, _w, _h);
		};
	}, false);
};
function setEventButtonColor(_id, _c) {
	document.getElementById(_id).addEventListener("click", function () {
		_c.strokeStyle = _id;
	}, false);
}
function setEventLineWidth(_id, _c) {
	document.getElementById(_id).addEventListener("click", function () {
		var strokewidth;
		switch (_id) {
			case "small":
				strokewidth = 5;
				break;
			case "middle":
				strokewidth = 10;
				break;
			case "large":
				strokewidth = 20;
				break;
			default:
				break;
		}
		_c.lineWidth = strokewidth;
	}, false);
}

},{"./get-touch-map-transition":2}],5:[function(require,module,exports){
"use strict";

module.exports = function () {
	//ドキュメントのタッチイベントの初期化
	document.addEventListener("touchstart", stopDefault, false);
	document.addEventListener("touchmove", stopDefault, false);
	//document.addEventListener("touchend",stopDefault,false);
	//ドキュメントのジェスチャーイベントの初期化
	document.addEventListener("gesturestart", stopDefault, false);
	document.addEventListener("gesturechange", stopDefault, false);
	//document.addEventListener("gestureend",stopDefault,false);

	//ブラウザのデフォルト動作を禁止する
	function stopDefault(e) {
		if (e.touches[0].target.tagName.toLowerCase() == "li") {
			return;
		}
		if (e.touches[0].target.tagName.toLowerCase() == "div") {
			return;
		}
		if (e.touches[0].target.tagName.toLowerCase() == "input") {
			return;
		}
		e.preventDefault();
	}
};

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmNcXGpzXFx2ai1jb250cm9sbGVyLmpzIiwic3JjXFxqc1xcdmotY29udHJvbGxlclxcZ2V0LXRvdWNoLW1hcC10cmFuc2l0aW9uLmpzIiwic3JjXFxqc1xcdmotY29udHJvbGxlclxcaW5pdC1jb250cm9sbGVyLXBhZC5qcyIsInNyY1xcanNcXHZqLWNvbnRyb2xsZXJcXGluaXQtcGFpbnQtY2FudmFzLmpzIiwic3JjXFxqc1xcdmotY29udHJvbGxlclxcaW5pdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FDQUEsSUFBSSx3QkFBc0IsUUFBUSwwQ0FBUixDQUExQjtBQUNBLElBQUksa0JBQWdCLFFBQVEsbUNBQVIsQ0FBcEI7QUFDQSxJQUFJLG9CQUFrQixRQUFRLHFDQUFSLENBQXRCO0FBQ0EsSUFBSSxPQUFLLFFBQVEsc0JBQVIsQ0FBVDtBQUNBLE9BQU8sTUFBUCxHQUFjLFlBQVU7QUFDdkIsS0FBSSxTQUFPLFNBQVMsY0FBVCxDQUF3QixVQUF4QixDQUFYO0FBQ0EsS0FBSSxJQUFFLEdBQU47QUFDQSxLQUFJLElBQUUsR0FBTjtBQUNBO0FBQ0E7QUFDQSxpQkFBZ0IsQ0FBaEIsRUFBa0IsQ0FBbEIsRUFBb0IsTUFBcEI7QUFDQSxtQkFBa0IsQ0FBbEIsRUFBb0IsQ0FBcEIsRUFBc0IsTUFBdEI7QUFDQSxDQVJEOzs7OztBQ0pBO0FBQ0EsT0FBTyxPQUFQLEdBQWUsVUFBUyxFQUFULEVBQVksT0FBWixFQUFvQjtBQUNsQyxLQUFJLFNBQU8sR0FBRyxPQUFILENBQVcsQ0FBWCxFQUFjLE9BQWQsR0FBc0IsRUFBRSxPQUFGLEVBQVcsUUFBWCxHQUFzQixJQUE1QyxHQUFpRCxTQUE1RDtBQUNBLEtBQUksU0FBTyxHQUFHLE9BQUgsQ0FBVyxDQUFYLEVBQWMsT0FBZCxHQUFzQixFQUFFLE9BQUYsRUFBVyxRQUFYLEdB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RjtBQWFBLEtBQUcsU0FBSCxHQUFhLFdBQWI7QUFDQSxFQWhCRCxFQWdCRSxLQWhCRjtBQWlCQTs7Ozs7QUM5RkQsT0FBTyxPQUFQLEdBQWUsWUFBVTtBQUN4QjtBQUNBLFVBQVMsZ0JBQVQsQ0FBMEIsWUFBMUIsRUFBdUMsV0FBdkMsRUFBbUQsS0FBbkQ7QUFDQSxVQUFTLGdCQUFULENBQTBCLFdBQTFCLEVBQXNDLFdBQXRDLEVBQWtELEtBQWxEO0FBQ0E7QUFDQTtBQUNBLFVBQVMsZ0JBQVQsQ0FBMEIsY0FBMUIsRUFBeUMsV0FBekMsRUFBcUQsS0FBckQ7QUFDQSxVQUFTLGdCQUFULENBQTBCLGVBQTFCLEVBQTBDLFdBQTFDLEVBQXNELEtBQXREO0FBQ0E7O0FBRUE7QUFDQSxVQUFTLFdBQVQsQ0FBcUIsQ0FBckIsRUFBdUI7QUFDdEIsTUFBRyxFQUFFLE9BQUYsQ0FBVSxDQUFWLEVBQWEsTUFBYixDQUFvQixPQUFwQixDQUE0QixXQUE1QixNQUE2QyxJQUFoRCxFQUFxRDtBQUNwRDtBQUNBO0FBQ0QsTUFBRyxFQUFFLE9BQUYsQ0FBVSxDQUFWLEVBQWEsTUFBYixDQUFvQixPQUFwQixDQUE0QixXQUE1QixNQUEyQyxLQUE5QyxFQUFvRDtBQUNuRDtBQUNBO0FBQ0QsTUFBRyxFQUFFLE9BQUYsQ0FBVSxDQUFWLEVBQWEsTUFBYixDQUFvQixPQUFwQixDQUE0QixXQUE1QixNQUEyQyxPQUE5QyxFQUFzRDtBQUNyRDtBQUNBO0FBQ0QsSUFBRSxjQUFGO0FBQ0E7QUFDRCxDQXZCRCIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJ2YXIgZ2V0VG91Y2hNYXBUcmFuc2l0aW9uPXJlcXVpcmUoXCIuL3ZqLWNvbnRyb2xsZXIvZ2V0LXRvdWNoLW1hcC10cmFuc2l0aW9uXCIpO1xyXG52YXIgaW5pdFBhaW50Q2FudmFzPXJlcXVpcmUoXCIuL3ZqLWNvbnRyb2xsZXIvaW5pdC1wYWludC1jYW52YXNcIik7XHJcbnZhciBpbml0Q29udHJvbGxlclBhZD1yZXF1aXJlKFwiLi92ai1jb250cm9sbGVyL2luaXQtY29udHJvbGxlci1wYWRcIik7XHJcbnZhciBpbml0PXJlcXVpcmUoXCIuL3ZqLWNvbnRyb2xsZXIvaW5pdFwiKTtcclxud2luZG93Lm9ubG9hZD1mdW5jdGlvbigpe1xyXG5cdHZhciBjYW52YXM9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJteUNhbnZhc1wiKTtcclxuXHR2YXIgdz0zMTY7XHJcblx0dmFyIGg9MzE2O1xyXG5cdC8vZ2V0VG91Y2hNYXBUcmFuc2l0aW9uKCk7XHJcblx0aW5pdCgpO1xyXG5cdGluaXRQYWludENhbnZhcyh3LGgsY2FudmFzKTtcclxuXHRpbml0Q29udHJvbGxlclBhZCh3LGgsY2FudmFzKTtcclxufVxyXG4iLCIvL+OCreODo+ODs+ODkOOCueS4iuOBruODnuOCpuOCueW6p+aomeOCkuOBqOOBo+OBpuOBj+OCi1xyXG5tb2R1bGUuZXhwb3J0cz1mdW5jdGlvbihfZSxfY2FudmFzKXtcclxuXHR2YXIgbW91c2VYPV9lLnRvdWNoZXNbMF0uY2xpZW50WC0kKF9jYW52YXMpLnBvc2l0aW9uKCkubGVmdCtzY3JvbGxYKCk7XHJcblx0dmFyIG1vdXNlWT1fZS50b3VjaGVzWzBdLmNsaWVudFktJChfY2FudmFzKS5wb3NpdGlvbigpLnRvcCtzY3JvbGxZKCk7XHJcblx0cmV0dXJuIHt4Om1vdXNlWCx5Om1vdXNlWX07XHJcbn1cclxuZnVuY3Rpb24gc2Nyb2xsWCgpe3JldHVybiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsTGVmdHx8ZG9jdW1lbnQuYm9keS5zY3JvbGxMZWZ0O31cclxuZnVuY3Rpb24gc2Nyb2xsWSgpe3JldHVybiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wfHxkb2N1bWVudC5ib2R5LnNjcm9sbFRvcDt9IiwidmFyIGdldFRvdWNoTWFwVHJhbnNpdGlvbj1yZXF1aXJlKFwiLi9nZXQtdG91Y2gtbWFwLXRyYW5zaXRpb25cIik7XHJcbm1vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKF93LF9oLF9jYW52YXMpe1xyXG5cdHZhciBzb2NrZXQ9aW8oKTtcclxuXHQvL3ZhciBjPV9jYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xyXG5cdC8vY29uc29sZS5sb2coYyk7XHJcblx0dmFyIHN1Ym1pdENhbnZhcz1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN1Ym1pdENhbnZhc1wiKTtcclxuXHR2YXIgc3ViYz1zdWJtaXRDYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xyXG5cclxuXHQvL+mAgeS/oeOBmeOCi+WBtOOBruOCreODo+ODs+ODkOOCuVxyXG5cdHN1Ym1pdENhbnZhcy53aWR0aD1fdztcclxuXHRzdWJtaXRDYW52YXMuaGVpZ2h0PV9oO1xyXG5cdC8v55S75YOP44KS44K144O844OQ44O844Gr6YCB5L+h44GZ44KL5Yem55CGXHJcblx0dmFyIHN1YlBvcztcclxuXHR2YXIgbm9ybWFsUG9zWCxub3JtYWxQb3NZO1xyXG5cdHZhciBpbWFnZTtcclxuXHR2YXIgc2VuZGluZ1RpbWVyO1xyXG5cdC8qLS0tLS0tLS0tLS0tLeeUu+WDj+OCkumAgeS/oeOBmeOCiy0tLS0tLS0tLS0tLS0tKi9cclxuXHRzdWJtaXRDYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoc3RhcnRcIixmdW5jdGlvbihlKXtcclxuXHRcdHN1YlBvcz1nZXRUb3VjaE1hcFRyYW5zaXRpb24oZSxzdWJtaXRDYW52YXMpO1xyXG5cdFx0bm9ybWFsUG9zWD0oc3ViUG9zLngqMi1fdykvX3c7XHJcblx0XHRub3JtYWxQb3NZPS0oKHN1YlBvcy55KjItX2gpL19oKTtcclxuXHRcdGltYWdlPWNyZWF0ZWJhc2U2NChfY2FudmFzKTtcclxuXHRcdHNlbmRpbmdUaW1lcj1zZXRJbnRlcnZhbChzZW50ZGF0YSwxMDApO1xyXG5cdH0sZmFsc2UpO1xyXG5cclxuXHRzdWJtaXRDYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNobW92ZVwiLGZ1bmN0aW9uKGUpe1xyXG5cdFx0c3ViUG9zPWdldFRvdWNoTWFwVHJhbnNpdGlvbihlLHN1Ym1pdENhbnZhcyk7XHJcblx0XHRub3JtYWxQb3NYPShzdWJQb3MueCoyLV93KS9fdztcclxuXHRcdG5vcm1hbFBvc1k9LSgoc3ViUG9zLnkqMi1faCkvX2gpO1xyXG5cdFx0aW1hZ2U9Y3JlYXRlYmFzZTY0KF9jYW52YXMpO1xyXG5cdH0sZmFsc2UpO1xyXG5cdHN1Ym1pdENhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hlbmRcIixmdW5jdGlvbigpe1xyXG5cdFx0Y2xlYXJJbnRlcnZhbChzZW5kaW5nVGltZXIpO1xyXG5cdH0sZmFsc2UpO1xyXG5cclxuXHJcblxyXG5cclxuXHRmdW5jdGlvbiBzZW50ZGF0YSgpe1x0XHRcclxuXHRcdHNvY2tldC5lbWl0KFwicHVzaEltYWdlRnJvbUNsaWVudFwiLHtcclxuXHRcdFx0aW1nZGF0YTppbWFnZSxcclxuXHRcdFx0eDpub3JtYWxQb3NYLFxyXG5cdFx0XHR5Om5vcm1hbFBvc1lcclxuXHRcdH0pO1xyXG5cdH1cclxuXHRmdW5jdGlvbiBjcmVhdGViYXNlNjQoX2NhbnZhcyl7XHJcblx0XHR2YXIgZGF0YT1fY2FudmFzLnRvRGF0YVVSTChcImltYWdlL3BuZ1wiKTtcclxuXHRcdHZhciBpbWFnZUNvbnRlbnRzPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaW1hZ2VDb250ZW50c1wiKTtcclxuXHRcdGltYWdlQ29udGVudHMuaW5uZXJIVE1MPVwiPGltZyBzcmM9J1wiK2RhdGErXCInPlwiO1x0XHJcblx0XHRyZXR1cm4gZGF0YTtcclxuXHR9XHJcbn0iLCIvL+e1teOCkuaPj+OBj+mDqOWIhlxyXG52YXIgZ2V0VG91Y2hNYXBUcmFuc2l0aW9uPXJlcXVpcmUoXCIuL2dldC10b3VjaC1tYXAtdHJhbnNpdGlvblwiKTtcclxubW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oX3csX2gsX2NhbnZhcyl7XHJcblx0dmFyIGM9X2NhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XHJcblx0dmFyIGRyYXdpbmc9ZmFsc2U7XHJcblx0dmFyIG9sZFBvcztcclxuXHJcblx0X2NhbnZhcy53aWR0aD1fdztcclxuXHRfY2FudmFzLmhlaWdodD1faDtcclxuXHJcblx0Yy5zdHJva2VTdHlsZT1cImJsYWNrXCI7XHJcblx0Yy5saW5lV2lkdGg9NTtcclxuXHRjLmxpbmVKb2luPVwicm91bmRcIjtcclxuXHRjLmxpbmVDYXA9XCJyb3VuZFwiO1xyXG5cclxuXHQvL+OCv+ODg+ODl+mWi+Wni+aZguOBq+OAgee1teOCkuaPj+OBj+a6luWCmeOCkuOBmeOCi1xyXG5cdF9jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoc3RhcnRcIixmdW5jdGlvbihlKXtcclxuXHRcdGRyYXdpbmc9dHJ1ZTtcclxuXHRcdG9sZFBvcz1nZXRUb3VjaE1hcFRyYW5zaXRpb24oZSxfY2FudmFzKTtcclxuXHR9LGZhbHNlKTtcclxuXHJcblx0Ly/jgr/jg4Pjg5fntYLkuobmmYLjgavjgIHntbXjgpLmj4/jgY/lvozlh6bnkIbjgpLooYzjgYZcclxuXHRfY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJ0b3VjaGVkXCIsZnVuY3Rpb24oKXtcclxuXHRcdGRyYXdpbmc9ZmFsc2VcclxuXHR9LGZhbHNlKTtcclxuXHJcblx0Ly9nZXN0dXJl44Kk44OZ44Oz44OI77yIMuacrOaMh+S7peS4iuinpuOCi+OBqOeZuueUn+OBmeOCi++8iVxyXG5cdC8v57WC5LqG5pmC44Gr44KC57W144KS5o+P44GP5b6M5Yem55CG44KS6KGM44GGXHJcblx0X2NhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwiZ2VzdHVyZWVuZFwiLGZ1bmN0aW9uKCl7XHJcblx0XHRkcmF3aW5nPWZhbHNlO1xyXG5cdH0sZmFsc2UpO1xyXG5cclxuXHQvL+Wun+mam+OBq+e1teOCkuabuOOBj+WHpueQhlxyXG5cdC8v5YmN5Zue5L+d5a2Y44GX44Gf5L2N572u44GL44KJ54++5Zyo44Gu5L2N572u44Gr57ea44KS5byV44GPXHJcblx0X2NhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsZnVuY3Rpb24oZSl7XHJcblx0dmFyIHBvcz1nZXRUb3VjaE1hcFRyYW5zaXRpb24oZSxfY2FudmFzKTtcclxuXHRcdGlmKGRyYXdpbmcpe1xyXG5cdFx0XHRjLmJlZ2luUGF0aCgpO1xyXG5cdFx0XHRjLm1vdmVUbyhvbGRQb3MueCxvbGRQb3MueSk7XHJcblx0XHRcdGMubGluZVRvKHBvcy54LHBvcy55KTtcclxuXHRcdFx0Yy5zdHJva2UoKTtcclxuXHRcdFx0Yy5jbG9zZVBhdGgoKTtcclxuXHRcdFx0b2xkUG9zPXBvcztcclxuXHRcdH1cclxuXHR9LGZhbHNlKTtcclxuXHQvL+iJsuOBqOe3muOBruWkquOBleOCkuioreWumuOBmeOCi1xyXG5cdHNldEV2ZW50QnV0dG9uQ29sb3IoXCJibGFja1wiLGMpO1xyXG5cdHNldEV2ZW50QnV0dG9uQ29sb3IoXCJibHVlXCIsYyk7XHJcblx0c2V0RXZlbnRCdXR0b25Db2xvcihcInJlZFwiLGMpO1xyXG5cdHNldEV2ZW50QnV0dG9uQ29sb3IoXCJncmVlblwiLGMpO1xyXG5cclxuXHRzZXRFdmVudExpbmVXaWR0aChcInNtYWxsXCIsYyk7XHJcblx0c2V0RXZlbnRMaW5lV2lkdGgoXCJtaWRkbGVcIixjKTtcclxuXHRzZXRFdmVudExpbmVXaWR0aChcImxhcmdlXCIsYyk7XHJcblxyXG5cdC8v5YmK6Zmk44Oc44K/44OzXHJcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkZWxldGVfYnV0dG9uXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGZ1bmN0aW9uKCl7XHJcblx0XHRjLmNsZWFyUmVjdCgwLDAsJChfY2FudmFzKS53aWR0aCgpLCQoX2NhbnZhcykuaGVpZ2h0KCkpO1x0XHRcclxuXHR9LGZhbHNlKTtcclxuXHJcblx0Ly/op6bjgaPjgabjga/jgYTjgZHjgarjgYTjg5zjgr/jg7NcclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRvbnRUb3VjaF9idXR0b25cIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsZnVuY3Rpb24oKXtcclxuXHRcdGNvbnNvbGUubG9nKFwiZG9udFRvdWNoX2J1dHRvblwiKTtcclxuXHRcdHZhciBpbWc9bmV3IEltYWdlKCk7XHJcblx0XHRpbWcuc3JjPVwiLi4vLi4vaW1nL2pvZS5qcGdcIjtcclxuXHRcdGltZy5vbmxvYWQ9ZnVuY3Rpb24oKXtcclxuXHRcdFx0Yy5kcmF3SW1hZ2UoaW1nLDAsMCxfdyxfaCk7XHJcblx0XHR9XHJcblxyXG5cdH0sZmFsc2UpO1xyXG59XHJcbmZ1bmN0aW9uIHNldEV2ZW50QnV0dG9uQ29sb3IoX2lkLF9jKXtcclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChfaWQpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGZ1bmN0aW9uKCl7XHJcblx0XHRfYy5zdHJva2VTdHlsZT1faWQ7XHJcblx0fSxmYWxzZSk7XHJcbn1cclxuZnVuY3Rpb24gc2V0RXZlbnRMaW5lV2lkdGgoX2lkLF9jKXtcclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChfaWQpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGZ1bmN0aW9uKCl7XHJcblx0XHR2YXIgc3Ryb2tld2lkdGg7XHJcblx0XHRzd2l0Y2goX2lkKXtcclxuXHRcdFx0Y2FzZSBcInNtYWxsXCI6XHJcblx0XHRcdFx0c3Ryb2tld2lkdGg9NTtcclxuXHRcdFx0XHRicmVhaztcclxuXHRcdFx0Y2FzZSBcIm1pZGRsZVwiOlxyXG5cdFx0XHRcdHN0cm9rZXdpZHRoPTEwO1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRjYXNlIFwibGFyZ2VcIjpcclxuXHRcdFx0XHRzdHJva2V3aWR0aD0yMDtcclxuXHRcdFx0XHRicmVhaztcclxuXHRcdFx0ZGVmYXVsdDpcclxuXHRcdFx0XHRicmVhaztcclxuXHRcdH1cclxuXHRcdF9jLmxpbmVXaWR0aD1zdHJva2V3aWR0aDtcclxuXHR9LGZhbHNlKTtcclxufSIsIm1vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKCl7XHJcblx0Ly/jg4njgq3jg6Xjg6Hjg7Pjg4jjga7jgr/jg4Pjg4HjgqTjg5njg7Pjg4jjga7liJ3mnJ/ljJZcclxuXHRkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLHN0b3BEZWZhdWx0LGZhbHNlKTtcclxuXHRkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsc3RvcERlZmF1bHQsZmFsc2UpO1xyXG5cdC8vZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoZW5kXCIsc3RvcERlZmF1bHQsZmFsc2UpO1xyXG5cdC8v44OJ44Kt44Ol44Oh44Oz44OI44Gu44K444Kn44K544OB44Oj44O844Kk44OZ44Oz44OI44Gu5Yid5pyf5YyWXHJcblx0ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImdlc3R1cmVzdGFydFwiLHN0b3BEZWZhdWx0LGZhbHNlKTtcclxuXHRkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiZ2VzdHVyZWNoYW5nZVwiLHN0b3BEZWZhdWx0LGZhbHNlKTtcclxuXHQvL2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJnZXN0dXJlZW5kXCIsc3RvcERlZmF1bHQsZmFsc2UpO1xyXG5cclxuXHQvL+ODluODqeOCpuOCtuOBruODh+ODleOCqeODq+ODiOWLleS9nOOCkuemgeatouOBmeOCi1xyXG5cdGZ1bmN0aW9uIHN0b3BEZWZhdWx0KGUpe1xyXG5cdFx0aWYoZS50b3VjaGVzWzBdLnRhcmdldC50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT0gXCJsaVwiKXtcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cdFx0aWYoZS50b3VjaGVzWzBdLnRhcmdldC50YWdOYW1lLnRvTG93ZXJDYXNlKCk9PVwiZGl2XCIpe1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblx0XHRpZihlLnRvdWNoZXNbMF0udGFyZ2V0LnRhZ05hbWUudG9Mb3dlckNhc2UoKT09XCJpbnB1dFwiKXtcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdH1cclxufSJdfQ==
